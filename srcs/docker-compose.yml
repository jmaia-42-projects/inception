version: "3"
services:
  nginx:
    build:
      context: nginx
      args:
        - DOMAIN_NAME=$DOMAIN_NAME
    container_name: nginx
    depends_on:
      - wordpress
      - adminer
    env_file: .env
    networks:
      - my_amazing_network
    ports:
      - "443:443"
    restart: on-failure
    volumes:
      - wordpress-files:/srv/wordpress/
  wordpress:
    build: ./wordpress
    container_name: wordpress
    depends_on:
      mariadb:
        condition: service_healthy
    env_file: .env
    networks:
      - my_amazing_network
    restart: on-failure
    volumes:
      - wordpress-files:/srv/wordpress/
  mariadb:
    build: ./mariadb
    container_name: mariadb
    env_file: .env
    networks:
      - my_amazing_network
    restart: on-failure
    volumes:
      - wordpress-database:/var/lib/mysql/wordpress
  redis:
    build: ./redis
    container_name: redis
    networks:
      - my_amazing_network
    restart: on-failure
  sshd:
    build:
      context: sshd
      args:
        - SSH_PASS=$SSH_PASS
    container_name: sshd
    env_file: .env
    networks:
      - my_amazing_network
    restart: on-failure
    ports:
      - "2222:22"
    volumes:
      - wordpress-files:/home/wordpress/:777
  ftp:
    build:
      context: ftp
      args:
        - FTP_PASS=$FTP_PASS
    container_name: ftp
    env_file: .env
    ports:
      - "21:21"
    networks:
      - my_amazing_network
    restart: on-failure
    volumes:
      - wordpress-files:/home/wordpress/:777
  adminer:
    build: ./adminer
    container_name: adminer
    networks:
      - my_amazing_network
    restart: on-failure
    volumes:
      - wordpress-files:/srv/
volumes:
  wordpress-files:
  wordpress-database:

networks:
  my_amazing_network:
